diff --git a/core/java/android/hardware/fingerprint/FingerprintManager.java b/core/java/android/hardware/fingerprint/FingerprintManager.java
index 5c1da1112e2a..021f2ea6143b 100644
--- a/core/java/android/hardware/fingerprint/FingerprintManager.java
+++ b/core/java/android/hardware/fingerprint/FingerprintManager.java
@@ -40,7 +40,9 @@ import android.annotation.TestApi;
 import android.app.ActivityManager;
 import android.compat.annotation.UnsupportedAppUsage;
 import android.content.Context;
+import android.content.Intent;
 import android.content.pm.PackageManager;
+import android.content.SharedPreferences;
 import android.hardware.biometrics.BiometricAuthenticator;
 import android.hardware.biometrics.BiometricConstants;
 import android.hardware.biometrics.BiometricFingerprintConstants;
@@ -58,8 +60,11 @@ import android.os.IBinder;
 import android.os.IRemoteCallback;
 import android.os.Looper;
 import android.os.PowerManager;
+import android.os.PowerManager.WakeLock;
 import android.os.RemoteException;
+import android.os.SystemClock;
 import android.os.UserHandle;
+import android.provider.Settings;
 import android.security.identity.IdentityCredential;
 import android.security.identity.PresentationSession;
 import android.util.Slog;
@@ -1324,6 +1329,32 @@ public class FingerprintManager implements BiometricAuthenticator, BiometricFing
         if (mAuthenticationCallback != null) {
             mAuthenticationCallback.onAuthenticationAcquired(acquireInfo);
         }
+        if (acquireInfo == 6 && vendorCode == 22) {
+            final PowerManager powerManager = mContext.getSystemService(PowerManager.class);   
+            if (!powerManager.isScreenOn()) {
+                int dozeEnable = Settings.Secure.getIntForUser(mContext.getContentResolver(),
+                    Settings.Secure.DOZE_ENABLED, 0, UserHandle.USER_CURRENT);
+                int pressUdfpsMode = Settings.Secure.getIntForUser(mContext.getContentResolver(),
+                    Settings.Secure.DOZE_PRESS_UDFPS_MODE, 0, UserHandle.USER_CURRENT);
+                Slog.w(TAG, "dozeEnable " + dozeEnable + " pressUdfpsType: " + pressUdfpsMode);
+                if (dozeEnable == 1) {
+                    if (pressUdfpsMode == 1) {
+                        mContext.sendBroadcastAsUser(new Intent("com.android.systemui.doze.pulse"), 
+                        new UserHandle(UserHandle.USER_CURRENT)); 
+                    }
+                    else if (pressUdfpsMode == 2) {
+                        PowerManager.WakeLock wakeLock = powerManager.newWakeLock(
+                            PowerManager.PARTIAL_WAKE_LOCK,  "udfpsWakeLock");
+                        wakeLock.acquire(300);
+                        powerManager.wakeUp(SystemClock.uptimeMillis(),
+                                PowerManager.WAKE_REASON_GESTURE, TAG);
+                    }
+                }
+            }   
+
+            return;         
+        }
+
         final String msg = getAcquiredString(mContext, acquireInfo, vendorCode);
         if (msg == null) {
             return;
